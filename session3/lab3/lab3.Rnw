\documentclass[10pt,a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage[charter]{mathdesign}
\usepackage[scaled=.95]{inconsolata}
\usepackage[margin=1.1in]{geometry}
\usepackage{color}

\usepackage{hyperref}
\usepackage{dcolumn,booktabs} %% for memisc
\usepackage{graphicx}
\usepackage{amsmath}

\definecolor{darkblue}{rgb}{0,0,.6} % not really
\definecolor{other}{rgb}{0,0,.5}
\hypersetup{colorlinks=true, linkcolor=darkblue, citecolor=darkblue, 
	filecolor=darkblue,urlcolor=other}

\setlength{\parskip}{1em}
\setlength{\parindent}{0em}


\author{IQMR 2016}
\title{Lab 3.}
\date{}

\begin{document}
\maketitle

\subsection*{US Senate Speeches}

<<include=FALSE>>=
knitr::opts_chunk$set(error=FALSE, 
                      comment='',
                      size="small")
options(width=100)
@

Let's take a look at a US Senate debate on partial birth abortion.  As ever, we'll load the texts, make a corpus, then a document term matrix to start off
<<setup,include=FALSE>>=
library(quanteda)
@
Then we make a document feature matrix to fit a model to
<<warning=FALSE>>=
corp <- corpus(textfile("data/abortion-debate-us-senate/*"))
docnames(corp) <- dir("data/abortion-debate-us-senate") ## if you need docnames
docvars(corp, "party") <- c(rep("D", 5), rep("R",7))
summary(corp)
corpdfm <- dfm(corp)
@
The \texttt{quanteda} package has a variety of scaling models, but for ease of examination we'll use the \texttt{austin} package instead.  First we'll trim the 
<<>>=
library(austin)
senatewfm <- wfm(corpdfm, word.margin=2) ## austin wants a wfm object
senatewfm <- trim(senatewfm)
@
and fit the model on a trimmed version
<<>>=
mod <- wordfish(senatewfm)
summary(mod)
@
Table summaries are nice but plots are better
<<>>=
plot(mod)
@
We can also get one of those nice `Eiffel Tower' plots that Proksch and Slapin use
<<>>=
plot(coef(mod, form='poisson'))
@
A little alpha transparency would proabbly help this (or a really big screen).  In any case the word positions are available as $\beta$ and document positions as $\theta$.

Let's take a look those the word positions and see how they line up on the dimension.  Let's plot the slope estimates for some likely looking word stems.  But first we have to extract them from all the other parameters.
<<get-words,comment=''>>=
wds <- mod$words
betas <- mod$beta
wparams <- data.frame(word=wds, beta=betas)
wparams <- wparams[order(wparams$beta), ] ## sort by beta
nrow(wparams)
@
Let's take a quick look at the extremes
<<>>=
head(wparams)
tail(wparams)
@

Or we could choose some likely candidates
<<>>=
testwords <- c("life", "choice", "womb", "her", "woman", "health",
               "born", "baby", "gruesome", "kill")
samp <- subset(wparams, word %in% testwords)
samp
@
or plot just these
\begin{center}
<<plot-words-again>>=
dotchart(samp$beta, samp$word, pch=19)
@
\end{center}

If we were being thorough about these words we'd check they do what we think they do by looking by looking at them in all their contexts, as we did in lab 1.

We can also look at more than one dimension in this data.  For this we'll use the \texttt{ca} package.  You may need use to \texttt{install.package} this first.
<<>>=
library(ca)
dim(senatewfm) ## we need to flip this around for ca 
mod2 <- ca(t(senatewfm), nf=2) ## note transpose t
@
The \texttt{ca} package calls its $\theta$s \texttt{rowcoord} and $\beta$ \texttt{colcoord}.

Although this is a least squares approximation to the wordfish model, the approximation is pretty good.  Let's compare the first dimension with wordfish's document positions.  We'll correlate because the (arbitrary) scaling is different between models
<<>>=
catheta <- mod2$rowcoord[,1]
cor(catheta, mod$theta)
@
Basically the same, and it's much quicker to fit too\ldots

The \texttt{summary} method is pretty comprehensive, though you'll probably want to read some of Greenacre 2007 to mwds <- mod$wordsake the most of it.
<<eval=FALSE>>=
summary(mod2)
@
Since we've got multiple dimensions we can check how much variation is being explained in each.  What the slides called $\sigma$ is related to the singular values of the underlying SVD, which we can get from the model. Let's plot these
<<>>=
plot(mod2$sv, pch=16)
@
The `elbow' after the first dimension is one (fallible) reason to think that this debate is mostly one dimensional. That is at least theoretically plausible.

If you want to see a biplot of all the words and documents, then
<<eval=FALSE>>=
plot(mod2)
@
but be warned.  It's big\ldots  You may want to read the help page to see how to only show some elements, or to change the colors.

\end{document}
